Bug hunter

## 1

private boolean checkDimensions(CLIQUEUnit, int e) {
	for(int i = 0, j = 0; i < e; i++, j += 2) {
		if(dims[i] != other.dims[i]
			|| bounds[j] != other.bounds[j]
			|| bounds[j + 1] != other.bounds[j + 1]) { //"other".bounds[j + 1] other is required
			return false;
			}
		}
		return true;
}


## 2

@Override
public double[] computeMean() {
	return points.size() == 1 ? points.get(0) : null; // get(1) is out of bounds
}

## 3

protected PreDeConModel computeLocalModel(DoubleDBIDList neighbors, ....) {
	final int referenceSetSize = neighbors.size();
	.....
	if(referenceSetSize < 0) {//this has to be <=
		LOG.warning("");
		return new PreDeConModel(Integer.MAX_VALUE, DBIDUtil.EMPTYDBIDS);
	}
	.....
	for(int d = 0; d < dim; d++) {
		s[d] /= referenceSetSize;
		mvVar.put(s[d]);
	}
	.....
}


## 4

public String getStrippedSubstring(){
	int sstart = start, ssend = end;
	while(sstart < ssend){
		char c = input.charAt(ssart);
		if(...){
			break;
		}
		++sstart;//the increment of the ++ goes after --> sstart++
	}
}


## 5

public static final byteSquence pregixEndOf (){
	byte[] endKey = prefix.getBytes().clone();
	for (int i = endKey.lenght - 1; i >= 0; i--){
		if (endKey[i] < 0xff) { // the operand is inversed it should be "endKey[i] > 0xff" 
			endKey[i] = (byte) (endKey[i] + 1);
			return ....;
		}
	}
	return ...;
} 
	
	
	
## 6


	
	
	
	
	
	
	
	